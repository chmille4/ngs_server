#!/usr/bin/env ruby
  require 'optparse'
  
  path = File.dirname(__FILE__)
  
  $:.unshift File.join(path, "../lib")

  require 'Ngs_server'
  

  require 'ngs_server/version'
  require 'ngs_server/add'
  

  options = {}
  command = ""

  optparse = OptionParser.new do |opts|
    opts.banner = "Usage: ngs_server start|stop|add [options]"
    
    opts.on( '-h', '--help', 'display this screen' ) do
        # puts "ngs_server command options"
        # puts "ngs_server start"
        
        puts opts
        puts "Examples:"
        puts "\tngs_server start"
        puts "\tngs_server start -p 4567 -d"
        puts "\tngs_server add path_to_data_directory"
        puts "\tngs_server stop"
        exit
    end
    
    options[:port] = '4569'    
    opts.on( '-p', '--port PORT', 'specifies to port to listen on' ) do |f|
        options[:port] = f
    end
    
    options[:daemonize] = ""
    opts.on( '-d', '--daemonize', 'runs process in the background' ) do
        options[:daemonize] = "-d";
    end
    
    # opts.on( '-C', '--config', 'configuration file for Thin server' ) do |f|
    #     options[:config] = f;
    # end
    
  end
  
  optparse.parse!
  command = ARGV[0]
  
  

  if (command == 'start')
   # ngsrun options
   rackup_path = File.join(path, '../lib/config.ru')
   puts ">> NGS web server (version " + NgsServer::VERSION + ")"
   if (options[:daemonize] == '-d')
     puts ">> Listening on 0.0.0.0:" + options[:port]
   else
     puts ">> Listening on 0.0.0.0:" + options[:port] + ", CTRL+C to stop"
   end
   `thin -R #{rackup_path} -p #{options[:port]} #{options[:daemonize]} start`

   #NgsServer.run!
  elsif (command == 'stop')
    rackup_path = File.join(path, '../lib/config.ru')
    `thin -R #{rackup_path} -p #{options[:port]} stop`
  elsif (command == 'add')
    # source_path = File.absolute_path(ARGV[1])
    # puts source_path
    # file_name = File.basename(source_path)
    # puts file_name
    # data_dir_path = File.join(path,'../data', file_name)
    # puts data_dir_path
    # `ln -s #{source_path} #{data_dir_path}`
    ngsadd ARGV[1]
  end
  
